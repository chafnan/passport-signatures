// Generated by CoffeeScript 1.6.3
var Strategy, passport, util,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

passport = require('passport-strategy');

util = require('util');

/*
 Creates an instance of `Strategy`.

 The anonymous authentication strategy passes authentication without verifying
 credentials.

 Applications typically use this as a fallback on endpoints that can respond
 to both authenticated and unauthenticated requests.  If credentials are not
 supplied, this stategy passes authentication while leaving `req.user` set to
 `undefined`, allowing the route to handle unauthenticated requests as
 desired.

 Examples:

     passport.use(new AnonymousStrategy());

 @constructor
 @api public
*/


Strategy = (function(_super) {
  __extends(Strategy, _super);

  function Strategy() {
    this.name = 'signature';
  }

  Strategy.prototype.authenticate = function() {
    return this.pass();
  };

  return Strategy;

})(passport.Strategy);

module.exports = Strategy;
